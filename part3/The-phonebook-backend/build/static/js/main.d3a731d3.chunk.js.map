{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notifications.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","id","delete","personObject","post","put","Filter","onChange","name","PersonForm","onSubmit","onNameChange","onNumberChange","nameValue","numberValue","value","type","Persons","nameFilter","persons","deleteContact","map","person","i","number","onClick","filter","toUpperCase","includes","Notifications","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNameFilter","notification","setNotification","useEffect","personService","initialContacts","e","target","preventDefault","alreadyAdded","length","window","confirm","returnedPerson","setTimeout","catch","error","newContact","concat","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3a731d3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"api/persons\";\n\nconst getAllContacts = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst addContact = (personObject) => {\n  const request = axios.post(baseUrl, personObject);\n  return request.then((response) => response.data);\n};\n\n/* const deleteContact = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n\n} */\n\nconst deleteContact = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst editContact = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAllContacts, deleteContact, addContact, editContact };\n","const Filter = ({ onChange }) => {\n  return (\n    <div>\n      <label>Filter shown with:\n          <input name='Filter shown with' onChange={onChange} />\n      </label>\n    </div>\n  )\n}\n\nexport default Filter\n","const PersonForm = ({ onSubmit, onNameChange, onNumberChange, nameValue, numberValue }) => {\n    return (\n\n        <form onSubmit={onSubmit}>\n            <div>\n                <label>\n                    Name:\n          <input name='name' value={nameValue} onChange={onNameChange} />\n                </label>\n            </div>\n            <div>\n                <label>\n                    Number:\n          <input name='number' type='number' value={numberValue} onChange={onNumberChange} />\n                </label>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n\n    )\n}\n\nexport default PersonForm\n","const Persons = ({ nameFilter, persons, deleteContact }) => {\n  return (\n    <ul>\n      {nameFilter === '' ? persons.map((person, i) =>\n        <li key={i}>\n          {person.name} {person.number}\n          <button onClick={() => deleteContact(person.id, person.name)}>delete</button>\n        </li>)\n        : persons.filter((person) => {\n          return person.name.toUpperCase().includes(nameFilter.toUpperCase())\n        }).map((person, i) =>\n          <li key={i}>\n            {person.name} {person.number}\n            <button onClick={() => deleteContact(person.id, person.name)}>delete</button>\n          </li>)}\n    </ul>\n  )\n}\n\nexport default Persons\n","const Notifications = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    else if (message.includes('server')) {\n        return (\n            <div className='error'>\n                {message}\n            </div>\n        )\n    }\n    return (\n        <div className='sucess'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notifications\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport personService from \"./services/persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notifications from \"./components/Notifications.js\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService.getAllContacts().then((initialContacts) => {\n      setPersons(initialContacts);\n    });\n  }, []);\n\n  const handleNameChange = (e) => setNewName(e.target.value);\n  const handleNumberChange = (e) => setNewNumber(e.target.value);\n  const handleFilter = (e) => setNameFilter(e.target.value);\n\n  const addContact = (e) => {\n    e.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    const alreadyAdded = persons.filter(\n      (person) => person.name.toUpperCase() === personObject.name.toUpperCase()\n    );\n\n    if (alreadyAdded.length === 1) {\n      window.confirm(\n        `${alreadyAdded[0].name} is already added to phonebook, replace the old number with a new one?`\n      );\n      personService\n        .editContact(alreadyAdded[0].id, personObject)\n        .then((returnedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id !== alreadyAdded[0].id ? person : returnedPerson\n            )\n          );\n          setNotification(`${personObject.name} contact was updated`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 3000);\n        })\n        .catch((error) => {\n          setNotification(\n            `Information of ${alreadyAdded[0].name} has been removed from server`\n          );\n          setTimeout(() => {\n            setNotification(null);\n          }, 3000);\n          setPersons(\n            persons.filter((person) => person.id !== alreadyAdded[0].id)\n          );\n        });\n    } else {\n      personService.addContact(personObject).then((newContact) => {\n        setPersons(persons.concat(newContact));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setNotification(`Added ${personObject.name}`);\n        setTimeout(() => {\n          setNotification(null);\n        }, 3000);\n      });\n    }\n  };\n\n  const deleteContact = (id, name) => {\n    if (window.confirm(`delete ${name} contact?`)) {\n      personService\n        .deleteContact(id)\n        .then((response) => {\n          console.log(response);\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch((error) => {\n          setNotification(`${name} was already removed`);\n          setPersons(persons.filter((person) => person.id !== id));\n          setTimeout(() => {\n            setNotification(null);\n          }, 3000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications message={notification} />\n      <Filter onChange={handleFilter} />\n      <h3>Add a New</h3>\n      <PersonForm\n        onSubmit={addContact}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        nameValue={newName}\n        numberValue={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        nameFilter={nameFilter}\n        persons={persons}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}